from flask import Response
from sqlalchemy import Engine, func
from sqlalchemy.orm import Session
from app.database.models import Product, Category
import logging

logger: logging.Logger = logging.getLogger(__name__)


def generate_summary(engine: Engine) -> Response:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å–≤–æ–¥–∫—É –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ë–î.
    """
    session: Session = Session(bind=engine)
    try:
        total_products: int = session.query(func.count(Product.id)).scalar()
        total_categories: int = session.query(func.count(Category.id)).scalar()
        average_price: float = session.query(func.avg(Product.price)).scalar() or 0

        first_product: Product = session.query(Product).order_by(Product.id).first()

        summary = [
            "===== üì¶ –°–≤–æ–¥–∫–∞ –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö =====",
            f"‚úÖ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_products}",
            f"‚úÖ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {total_categories}",
            f"üíµ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {average_price:.2f}‚ÇΩ",
        ]

        if first_product:
            summary += [
                "üî• –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞:",
                f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {first_product.name}",
                f"   - –¶–µ–Ω–∞: {first_product.price}‚ÇΩ",
                f"   - –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {first_product.category.name}",
                f"   - –§–æ—Ç–æ: {first_product.image_url}",
            ]

        summary.append("===================================")
        logger.info("–°–≤–æ–¥–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–ª–∏–µ–Ω—Ç—É")

        return Response("\n".join(summary), mimetype="text/plain")
    finally:
        session.close()
